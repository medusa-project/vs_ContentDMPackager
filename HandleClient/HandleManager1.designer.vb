'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.269
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="HandleManager")>  _
Partial Public Class HandleManagerDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertHandleAction(instance As HandleAction)
    End Sub
  Partial Private Sub UpdateHandleAction(instance As HandleAction)
    End Sub
  Partial Private Sub DeleteHandleAction(instance As HandleAction)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Uiuc.Library.HandleClient.My.MySettings.Default.HandleManagerConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property HandleActions() As System.Data.Linq.Table(Of HandleAction)
		Get
			Return Me.GetTable(Of HandleAction)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HandleActions")>  _
Partial Public Class HandleAction
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _handle As String
	
	Private _target As String
	
	Private _target_type As String
	
	Private _email As String
	
	Private _desc As String
	
	Private _netid As String
	
	Private _date As Date
	
	Private _action As String
	
	Private _id As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnhandleChanging(value As String)
    End Sub
    Partial Private Sub OnhandleChanged()
    End Sub
    Partial Private Sub OntargetChanging(value As String)
    End Sub
    Partial Private Sub OntargetChanged()
    End Sub
    Partial Private Sub Ontarget_typeChanging(value As String)
    End Sub
    Partial Private Sub Ontarget_typeChanged()
    End Sub
    Partial Private Sub OnemailChanging(value As String)
    End Sub
    Partial Private Sub OnemailChanged()
    End Sub
    Partial Private Sub OndescChanging(value As String)
    End Sub
    Partial Private Sub OndescChanged()
    End Sub
    Partial Private Sub OnnetidChanging(value As String)
    End Sub
    Partial Private Sub OnnetidChanged()
    End Sub
    Partial Private Sub OndateChanging(value As Date)
    End Sub
    Partial Private Sub OndateChanged()
    End Sub
    Partial Private Sub OnactionChanging(value As String)
    End Sub
    Partial Private Sub OnactionChanged()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_handle", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property handle() As String
		Get
			Return Me._handle
		End Get
		Set
			If (String.Equals(Me._handle, value) = false) Then
				Me.OnhandleChanging(value)
				Me.SendPropertyChanging
				Me._handle = value
				Me.SendPropertyChanged("handle")
				Me.OnhandleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_target", DbType:="NVarChar(200)")>  _
	Public Property target() As String
		Get
			Return Me._target
		End Get
		Set
			If (String.Equals(Me._target, value) = false) Then
				Me.OntargetChanging(value)
				Me.SendPropertyChanging
				Me._target = value
				Me.SendPropertyChanged("target")
				Me.OntargetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_target_type", DbType:="VarChar(10)")>  _
	Public Property target_type() As String
		Get
			Return Me._target_type
		End Get
		Set
			If (String.Equals(Me._target_type, value) = false) Then
				Me.Ontarget_typeChanging(value)
				Me.SendPropertyChanging
				Me._target_type = value
				Me.SendPropertyChanged("target_type")
				Me.Ontarget_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email", DbType:="NVarChar(100)")>  _
	Public Property email() As String
		Get
			Return Me._email
		End Get
		Set
			If (String.Equals(Me._email, value) = false) Then
				Me.OnemailChanging(value)
				Me.SendPropertyChanging
				Me._email = value
				Me.SendPropertyChanged("email")
				Me.OnemailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[desc]", Storage:="_desc", DbType:="NVarChar(500)")>  _
	Public Property desc() As String
		Get
			Return Me._desc
		End Get
		Set
			If (String.Equals(Me._desc, value) = false) Then
				Me.OndescChanging(value)
				Me.SendPropertyChanging
				Me._desc = value
				Me.SendPropertyChanged("desc")
				Me.OndescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_netid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property netid() As String
		Get
			Return Me._netid
		End Get
		Set
			If (String.Equals(Me._netid, value) = false) Then
				Me.OnnetidChanging(value)
				Me.SendPropertyChanging
				Me._netid = value
				Me.SendPropertyChanged("netid")
				Me.OnnetidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="date", Storage:="_date", DbType:="DateTime NOT NULL")>  _
	Public Property [date]() As Date
		Get
			Return Me._date
		End Get
		Set
			If ((Me._date = value)  _
						= false) Then
				Me.OndateChanging(value)
				Me.SendPropertyChanging
				Me._date = value
				Me.SendPropertyChanged("[date]")
				Me.OndateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_action", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property action() As String
		Get
			Return Me._action
		End Get
		Set
			If (String.Equals(Me._action, value) = false) Then
				Me.OnactionChanging(value)
				Me.SendPropertyChanging
				Me._action = value
				Me.SendPropertyChanged("action")
				Me.OnactionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
